import numpy as np
import scipy.spatial.distance as dis
from math import sqrt



def get_curvature(racetrack: np.ndarray):
    #racetrack_delta=np.diff(racetrack,axis=0)
    #print("Delta: ",racetrack_delta)
    
    kappa=np.zeros([racetrack.shape[0],1])

    velocity_vectors=np.diff(racetrack,axis=0)
    phi=getangle(velocity_vectors)

    phi=np.reshape(phi,[-1,1])
    track=zip(list(racetrack[:,0]),list(racetrack[:,1]),list(phi))

    print("This is the ZIP Track:\n ", track)
    
    for i,tup in enumerate(track):
        #print(tup)
        kappa[i]=tup[2]/(tup[0]**2+tup[1]**2)**(0.5)
    
    return kappa

def getangle(velocity_vectors):
    N=np.size(velocity_vectors,0)
    phi=np.zeros(N)
    for i,v in enumerate(velocity_vectors):
        phi[i]=(np.angle(v[0]+v[1]*1j))
    return phi

def findCircle(x1, y1, x2, y2, x3, y3):




    x12 = x1 - x2  
    x13 = x1 - x3  
    
    y12 = y1 - y2  
    y13 = y1 - y3  
    
    y31 = y3 - y1  
    y21 = y2 - y1  
  
    x31 = x3 - x1  
    x21 = x2 - x1
    
    # x1^2 - x3^2  
    sx13 = pow(x1, 2) - pow(x3, 2)  
  
    # y1^2 - y3^2  
    sy13 = pow(y1, 2) - pow(y3, 2)  
  
    sx21 = pow(x2, 2) - pow(x1, 2)  
    sy21 = pow(y2, 2) - pow(y1, 2)  
  
    f = (((sx13) * (x12) + (sy13) * 
          (x12) + (sx21) * (x13) + 
          (sy21) * (x13)) // (2 * 
          ((y31) * (x12) - (y21) * (x13)))) 
              
    g = (((sx13) * (y12) + (sy13) * (y12) + 
          (sx21) * (y13) + (sy21) * (y13)) // 
          (2 * ((x31) * (y12) - (x21) * (y13))))
  
    c = (-pow(x1, 2) - pow(y1, 2) - 
         2 * g * x1 - 2 * f * y1)
    
    # eqn of circle be x^2 + y^2 + 2*g*x + 2*f*y + c = 0  
    # where centre is (h = -g, k = -f) and  
    # radius r as r^2 = h^2 + k^2 - c  
    h = -g
    k = -f
    sqr_of_r = h * h + k * k - c  
    
    
    #get sign

    p12=np.array([-x12,-y12])
    p13=np.array([-x13,-y13])
    
    p=np.vstack((p12,p13))

    #print(p," p12: ",p12)

    phi=getangle(p)
    
    sign=-1*np.sign(phi[0]-phi[1])

    #print(sign)


    # r is the radius  
    r = sign*round(sqrt(sqr_of_r), 5) 
    return r  


def getkappa(racetrack: np.ndarray):
    
    kappa=[]
    for i in range(1,len(racetrack)-1):
        p1=racetrack[i-1,:]
        p2=racetrack[i,:]
        p3=racetrack[i+1,:]

        kappa.append(1/findCircle(p1[0],p1[1],p2[0],p2[1],p3[0],p3[1]))

    kappa.append(kappa[-1])
    kappa.insert(0,kappa[0])
    return np.array([kappa]).T



#testrun

#kappa_real=np.array([0.0016333571650139968, 0.001524292911901169, 0.001415171188853787, 0.001306009716986299, 0.0011968231903486141, 0.0010876235055652624, 0.0009784199934619552, 0.000869219652072868, 0.0007600273805366951, 0.0006508462134942282, 0.0005416775556947, 0.00043252141660213777, 0.0003233766448664769, 0.00021424116258705387, 0.00010511219934839821, -4.013473950056546e-06, -0.0001131393114175859, -0.00022226875857572667, -0.0003314050187582884, -0.0004405508194247248, -0.0005497081783146407, -0.0006588781693926048, -0.0007680606885643576, -0.000877254219187984, -0.0009864555974566814, -0.0010956597777934355, -0.0012048595984721722, -0.0013140455477647515, -0.0014232055310084092, -0.0015323246390937179, 5.972630879343604e-06, 6.125343886182183e-06, 6.278056895837532e-06, 6.430769908203014e-06, 6.583482923145657e-06, 6.736195940505519e-06, 6.888908960095043e-06, 7.04162198169842e-06, 7.194335005070948e-06, 7.347048029938384e-06, 7.499761055996318e-06, 7.652474082909512e-06, 7.805187110311287e-06, 7.957900137802859e-06, 8.110613164952704e-06, 8.26332619129592e-06, 8.334184709598696e-06, 8.405043231914175e-06, 8.475901758095156e-06, 8.546760287986846e-06, 8.617618821426805e-06, 8.688477358244866e-06, 8.75933589826308e-06, 8.830194441295654e-06, 8.901052987148896e-06, 8.971911535621121e-06, 9.042770086502624e-06, 9.113628639575578e-06, 9.18448719461401e-06, 9.25534575138371e-06, 9.326204309642172e-06, 9.419385542291471e-06, 9.51256678074609e-06, 9.605748024756925e-06, 9.698929274060001e-06, 9.792110528376359e-06, 9.885291787411877e-06, 9.97847305085716e-06, 1.0071654318387352e-05, 1.0164835589662039e-05, 1.025801686432507e-05, 1.0351198142004414e-05, 1.0444379422312027e-05, 1.05375607048437e-05, 1.063074198917891e-05, 1.0723923274880686e-05, 1.0809482004765671e-05, 1.0895040742774436e-05, 1.0980599488596151e-05, 1.1066158241905636e-05, 1.1151717002363264e-05, 1.1237275769614832e-05, 1.1322834543291451e-05, 1.1408393323009453e-05, 1.1493952108370245e-05, 1.1579510898960225e-05, 1.1665069694350657e-05, 1.1750628494097554e-05, 1.183618729774158e-05, 1.192174610480792e-05, 1.2007304914806742e-05, 1.2100748587461271e-05, 1.2194192271696222e-05, 1.2287635967089357e-05, 1.2381079673199264e-05, 1.2474523389565266e-05, 1.2567967115707218e-05, 1.2661410851125398e-05, 1.2754854595300349e-05, 1.2848298347692723e-05, 1.2941742107743147e-05, 1.3035185874872073e-05, 1.3128629648479621e-05, 1.3222073427945453e-05, 1.3315517212628598e-05, 1.3408961001867342e-05, 1.347804382889587e-05, 1.3547126669108493e-05, 1.3616209522087818e-05, 1.3685292387404795e-05, 1.3754375264618692e-05, 1.3823458153277052e-05, 1.3892541052915581e-05, 1.3961623963058146e-05, 1.403070688321669e-05, 1.4099789812891148e-05, 1.416887275156944e-05, 1.4237955698727372e-05, 1.4307038653828592e-05, 1.437612161632451e-05, 1.444520458565584e-05, 1.4603184424416598e-05, 1.4761164285407377e-05, 1.4919144167625282e-05, 1.5077124070001162e-05, 1.5235103991398923e-05, 1.5393083930614777e-05, 1.555106388637657e-05, 1.5709043857343062e-05, 1.586702384210322e-05, 1.6025003839175495e-05, 1.6182983847007117e-05, 1.634096386397341e-05, 1.6498943888377052e-05, 1.6656923918447382e-05, 1.6814903952339694e-05])
#racetrack=np.array([[-0.6455059781442899, -47.56342650457303], [-2.3128736907575984, -46.460038726611295], [-3.9835710940969675, -45.36175420900764], [-5.657359718697424, -44.26820747804866], [-7.334001095093993, -43.17903306002095], [-9.013256753821697, -42.093865481211104], [-10.694888225415568, -41.01233926790575], [-12.378657040410632, -39.93408894639145], [-14.064324729341907, -38.85874904295481], [-15.751652822744427, -37.785954083882444], [-17.440402851153213, -36.71533859546094], [-19.13033634510329, -35.646537103976904], [-20.82121483512969, -34.579184135716915], [-22.512799851767436, -33.51291421696759], [-24.204852925551553, -32.44736187401552], [-25.89713558701706, -31.382161633147295], [-27.589409366698998, -30.316948020649534], [-29.281435795132385, -29.25135556280881], [-30.972976402852243, -28.185018785911748], [-32.6637927203936, -27.11757221624493], [-34.353646278291485, -26.04865038009496], [-36.04229860708093, -24.977887803748423], [-37.72951123729694, -23.904919013491927], [-39.41504569947456, -22.82937853561208], [-41.098663524148805, -21.750900896395464], [-42.78012624185472, -20.669120622128688], [-44.459195383127295, -19.583672239098348], [-46.135632478501584, -18.494190273591034], [-47.80919905851262, -17.40030925189335], [-49.4796566536954, -16.301663700291897], [-51.14676679458496, -15.19788814507328], [-52.81191967475172, -14.09157578162405], [-54.47708610245236, -12.985283808858133], [-56.14226641505336, -11.87901273540272], [-57.807460949921236, -10.772763069885], [-59.47267004442244, -9.66653532093216], [-61.13789403592349, -8.560329997171394], [-62.80313326179085, -7.454147607229888], [-64.46838805939103, -6.347988659734833], [-66.1336587660905, -5.241853663313418], [-67.79894571925577, -4.135743126592836], [-69.46424925625332, -3.029657558200272], [-71.12956971444963, -1.923597466762916], [-72.79490743121119, -0.8175633609079611], [-74.46026274390451, 0.2884442507374032], [-76.12563598989604, 1.39442485954599], [-77.79103749853861, 2.50038465770075], [-79.45645743418261, 3.6063167077751235], [-81.12189595294484, 4.712220773483816], [-82.78735321094211, 5.818096618541531], [-84.4528293642912, 6.923944006662974], [-86.11832456910896, 8.029762701562852], [-87.78383898151219, 9.135552466955867], [-89.44937275761764, 10.241313066556724], [-91.11492605354218, 11.347044264080129], [-92.78049902540256, 12.452745823240786], [-94.44609182931562, 13.558417507753399], [-96.11170462139818, 14.664059081332677], [-97.777337557767, 15.76967030769332], [-99.4429907945389, 16.875250950550033], [-101.10866448783071, 17.98080077361752], [-102.77435938989396, 19.086319918409774], [-104.4400751098469, 20.19180769634283], [-106.10581185292799, 21.297263796653954], [-107.77156982437566, 22.402687908580386], [-109.43734922942838, 23.50807972135938], [-111.1031502733246, 24.613438924228195], [-112.76897316130272, 25.71876520642407], [-114.43481809860126, 26.824058257184266], [-116.1006852904586, 27.929317765746035], [-117.76657494211322, 29.03454342134662], [-119.43248725880358, 30.139734913223283], [-121.0984224457681, 31.244891930613267], [-122.76438070824526, 32.35001416275383], [-124.43036225147347, 33.45510129888222], [-126.0963672806912, 34.56015302823569], [-127.76238718236897, 35.66516319711403], [-129.42843096312976, 36.77013736326799], [-131.0944988110793, 37.87507524113287], [-132.76059091432342, 38.979976545143934], [-134.42670746096783, 40.084840989736506], [-136.09284863911833, 41.189668289345846], [-137.75901463688072, 42.29445815840726], [-139.42520564236068, 43.399210311356036], [-141.09142184366408, 44.50392446262747], [-142.7576634288966, 45.608600326656834], [-144.42393058616406, 46.71323761787944], [-146.09022350357222, 47.817836050730556], [-147.75654236922685, 48.92239533964549], [-149.4228873712337, 50.02691519905952], [-151.0892586976986, 51.131395343407945], [-152.7556388552843, 52.23582376238393], [-154.42204573005026, 53.340211869533], [-156.0884795271757, 54.444559352809605], [-157.75494045183984, 55.548865900168146], [-159.42142870922197, 56.65313119956307], [-161.0879445045012, 57.75735493894881], [-162.75448804285674, 58.86153680627977], [-164.4210595294679, 59.96567648951041], [-166.08765916951378, 61.06977367659512], [-167.75428716817365, 62.17382805548836], [-169.42094373062673, 63.277839314144536], [-171.08762906205226, 64.38180714051809], [-172.75434336762933, 65.48573122256346], [-174.42108685253731, 66.58961124823506], [-176.08785972195534, 67.6934469054873], [-177.75463664724322, 68.79722099320756], [-179.42144331243065, 69.90095017076786], [-181.088279868634, 71.00463420710473], [-182.75514646696982, 72.10827287115468], [-184.42204325855457, 73.21186593185429], [-186.08897039450474, 74.31541315814005], [-187.75592802593673, 75.41891431894852], [-189.42291630396707, 76.52236918321618], [-191.08993537971224, 77.62577751987965], [-192.7569854042887, 78.72913909787538], [-194.42406652881292, 79.83245368613996], [-196.09117890440137, 80.93572105360987], [-197.75832268217053, 82.03894096922168], [-199.42549801323685, 83.14211320191191], [-201.09270504871685, 84.2452375206171], [-202.75991216369806, 85.34829260032896], [-204.42715147964213, 86.45129900916943], [-206.0944233431972, 87.5542562194786], [-207.7617281010114, 88.65716370359657], [-209.42906609973295, 89.76002093386339], [-211.09643768601003, 90.86282738261914], [-212.7638432064909, 91.96558252220393], [-214.43128300782357, 93.06828582495784], [-216.09875743665637, 94.17093676322094], [-217.76626683963744, 95.27353480933328], [-219.43381156341493, 96.37607943563502], [-221.10139195463702, 97.47857011446618], [-222.76900835995195, 98.58100631816687], [-224.4366611260078, 99.68338751907717], [-226.10435059945289, 100.78571318953715]])

#racetrack=np.array([[1, 2, 3, 4, 5, 6, 7, 8],[1,4,9,16,25,36,49,64]])
#racetrack=racetrack.T

#print(racetrack)
#kappa=getkappa(racetrack)
#print(kappa)
#print("3 point methode: ",np.mean(kappa-kappa_real))
#kappa=get_curvature(racetrack)
#print("Methode before: ",np.mean(kappa.T-kappa_real))